"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.methods = void 0;
exports.load = load;
exports.unload = unload;
exports.onAssetMenu = onAssetMenu;
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
/**
 * @en Registration method for the main process of Extension
 * @zh 为扩展的主进程的注册方法
 */
exports.methods = {
    /**
     * @en A method that can be triggered by message
     * @zh 通过 message 触发的方法
     */
    showLog() {
        console.log('Hello World');
    },
};
const AutoAltasPatch = fs_extra_1.default.readFileSync(path_1.default.join(__dirname, '..', 'res', 'AutoAtlasPatch.txt'), 'utf-8');
async function refreshPac(assetInfo) {
    // console.log(assetInfo);
    let pacDir = path_1.default.dirname(assetInfo.url);
    let spriteFrameFormat = pacDir + "/**/*.png";
    let subImgs = await Editor.Message.request("asset-db", "query-assets", { pattern: spriteFrameFormat });
    let destPath = path_1.default.join(Editor.Project.path, "library", assetInfo.uuid.substring(0, 2), assetInfo.uuid + ".json");
    var data = fs_extra_1.default.readFileSync(destPath);
    var pacConfig = JSON.parse(data.toString());
    pacConfig.content.spriteFrames = [];
    for (let j = 0; j < subImgs.length; j++) {
        let subImg = subImgs[j];
        if (subImg.subAssets && subImg.subAssets["f9941"]) {
            pacConfig.content.spriteFrames.push(subImg.subAssets["f9941"].displayName);
            pacConfig.content.spriteFrames.push(subImg.subAssets["f9941"].uuid);
        }
    }
    fs_extra_1.default.writeFileSync(destPath, JSON.stringify(pacConfig));
    let uuidTempPath = path_1.default.join(Editor.Project.path, 'temp', 'asset-db', 'assets', assetInfo.uuid.substring(0, 2), assetInfo.uuid);
    if (!fs_extra_1.default.existsSync(uuidTempPath)) {
        console.error('未查找到预览文件，请确保预览后再执行此操作');
        return;
    }
    let dirs = fs_extra_1.default.readdirSync(uuidTempPath);
    let buildPath = dirs.find(dir => dir.startsWith('build') && fs_extra_1.default.existsSync(path_1.default.join(uuidTempPath, dir, 'preview', 'texture-packer', 'preview')));
    if (!buildPath) {
        console.error('未查找到预览文件，请确保预览后再执行此操作');
        return;
    }
    let previewPath = path_1.default.join(uuidTempPath, buildPath, 'preview', 'texture-packer', 'preview');
    if (!fs_extra_1.default.existsSync(previewPath)) {
        console.error('未查找到预览文件，请确保预览后再执行此操作');
        return;
    }
    let temp = path_1.default.join(Editor.Project.path, 'assets', 'auto_atlas_temp');
    if (!fs_extra_1.default.existsSync(temp)) {
        fs_extra_1.default.mkdirSync(temp);
        // console.warn('请将temp文件夹添加到bundle过滤配置中');
        let tempUrl = temp.replace(Editor.Project.path, '');
        tempUrl = tempUrl.replace(/\\/g, '/');
        tempUrl = 'db://' + tempUrl.replace('/', '');
        // console.warn(tempUrl);
        await Editor.Message.request('asset-db', 'refresh-asset', tempUrl);
        let metaPath = temp + '.meta';
        if (fs_extra_1.default.existsSync(metaPath)) {
            let meta = fs_extra_1.default.readFileSync(metaPath);
            let metaJson = JSON.parse(meta.toString());
            if (!metaJson.userData) {
                metaJson.userData = {};
            }
            metaJson.userData.isBundle = true;
            fs_extra_1.default.writeFileSync(metaPath, JSON.stringify(metaJson));
            await Editor.Message.request('asset-db', 'refresh-asset', tempUrl);
        }
    }
    let scriptsPath = path_1.default.join(temp, 'scripts');
    if (!fs_extra_1.default.existsSync(scriptsPath)) {
        fs_extra_1.default.mkdirSync(scriptsPath);
    }
    let patchPath = path_1.default.join(scriptsPath, 'AutoAtlasPatch.ts');
    let code = '';
    if (!fs_extra_1.default.existsSync(patchPath)) {
        code = AutoAltasPatch;
    }
    else {
        code = fs_extra_1.default.readFileSync(patchPath, 'utf-8');
    }
    // 查找图集
    let pacFormat = "db://assets/**/*.pac";
    let pacs = await Editor.Message.request("asset-db", "query-assets", { pattern: pacFormat });
    // 生成新的uuids数组字符串
    let newUuidsStr = pacs.map(pac => {
        return `{ uuid: '${pac.uuid}' }`;
    }).join(', ');
    // 替换代码中的uuids数组
    let uuidPattern = /let\s+uuids\s*=\s*\[(.*?)\]/;
    code = code.replace(uuidPattern, `let uuids = [${newUuidsStr}]`);
    fs_extra_1.default.writeFileSync(patchPath, code);
    // 删除atlas中的无用资源
    let atlasDirs = fs_extra_1.default.readdirSync(path_1.default.join(temp, 'atlas'));
    atlasDirs.forEach(dir => {
        if (!pacs.find(pac => pac.uuid === dir) && !dir.endsWith('.meta')) {
            fs_extra_1.default.removeSync(path_1.default.join(temp, 'atlas', dir));
            fs_extra_1.default.removeSync(path_1.default.join(temp, 'atlas', dir + '.meta'));
        }
    });
    Editor.Message.request('asset-db', 'refresh-asset', 'db://assets/auto_atlas_temp/scripts/AutoAtlasPatch.ts');
    uuidTempPath = path_1.default.join(temp, 'atlas', assetInfo.uuid);
    if (!fs_extra_1.default.existsSync(uuidTempPath)) {
        fs_extra_1.default.mkdirSync(uuidTempPath, { recursive: true });
    }
    fs_extra_1.default.copySync(previewPath, uuidTempPath, { overwrite: true });
    let imgDir = fs_extra_1.default.readdirSync(path_1.default.join(temp, 'atlas', assetInfo.uuid));
    let pacInfo = path_1.default.join(temp, 'atlas', assetInfo.uuid, 'pac-info.json');
    let pacInfoData = JSON.parse(fs_extra_1.default.readFileSync(pacInfo, 'utf-8'));
    let atlases = pacInfoData.result.atlases;
    // for (let atlas of atlases) {
    //     let imageUuid = atlas.imageUuid;
    // }
    imgDir.forEach((img) => {
        if (!img.endsWith('.png')) {
            return;
        }
        if (!atlases.find(atlas => atlas.imageUuid === path_1.default.basename(img, '.png'))) {
            fs_extra_1.default.removeSync(path_1.default.join(temp, 'atlas', assetInfo.uuid, img));
            fs_extra_1.default.removeSync(path_1.default.join(temp, 'atlas', assetInfo.uuid, img + '.meta'));
        }
    });
    let tempUrl = await Editor.Message.request('asset-db', 'query-url', temp);
    await Editor.Message.request('asset-db', 'refresh-asset', tempUrl);
    console.log(`${assetInfo.url}自动图集刷新成功（请确保预览后再执行此操作）`);
}
/**
 * @en Method Triggered on Extension Startup
 * @zh 扩展启动时触发的方法
 */
function load() { }
/**
 * @en Method triggered when uninstalling the extension
 * @zh 卸载扩展时触发的方法
 */
function unload() { }
function onAssetMenu(assetInfo) {
    return [
        {
            label: '刷新自动图集',
            visible: assetInfo.importer == 'auto-atlas',
            click() {
                refreshPac(assetInfo);
            }
        }
    ];
}
//# sourceMappingURL=data:application/json;base64,